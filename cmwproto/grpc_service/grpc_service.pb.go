// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_service.proto

package grpc_service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetJsonReply struct {
	Result               *string  `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJsonReply) Reset()         { *m = GetJsonReply{} }
func (m *GetJsonReply) String() string { return proto.CompactTextString(m) }
func (*GetJsonReply) ProtoMessage()    {}
func (*GetJsonReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{0}
}
func (m *GetJsonReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJsonReply.Unmarshal(m, b)
}
func (m *GetJsonReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJsonReply.Marshal(b, m, deterministic)
}
func (dst *GetJsonReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJsonReply.Merge(dst, src)
}
func (m *GetJsonReply) XXX_Size() int {
	return xxx_messageInfo_GetJsonReply.Size(m)
}
func (m *GetJsonReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJsonReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetJsonReply proto.InternalMessageInfo

func (m *GetJsonReply) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

type SubscribeReply struct {
	Result               *string  `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeReply) Reset()         { *m = SubscribeReply{} }
func (m *SubscribeReply) String() string { return proto.CompactTextString(m) }
func (*SubscribeReply) ProtoMessage()    {}
func (*SubscribeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{1}
}
func (m *SubscribeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeReply.Unmarshal(m, b)
}
func (m *SubscribeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeReply.Marshal(b, m, deterministic)
}
func (dst *SubscribeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeReply.Merge(dst, src)
}
func (m *SubscribeReply) XXX_Size() int {
	return xxx_messageInfo_SubscribeReply.Size(m)
}
func (m *SubscribeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeReply.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeReply proto.InternalMessageInfo

func (m *SubscribeReply) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

type ConfigReply struct {
	Result               *string  `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigReply) Reset()         { *m = ConfigReply{} }
func (m *ConfigReply) String() string { return proto.CompactTextString(m) }
func (*ConfigReply) ProtoMessage()    {}
func (*ConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{2}
}
func (m *ConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigReply.Unmarshal(m, b)
}
func (m *ConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigReply.Marshal(b, m, deterministic)
}
func (dst *ConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigReply.Merge(dst, src)
}
func (m *ConfigReply) XXX_Size() int {
	return xxx_messageInfo_ConfigReply.Size(m)
}
func (m *ConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigReply proto.InternalMessageInfo

func (m *ConfigReply) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

type ReportEvent struct {
	TokenId              *string  `protobuf:"bytes,1,req,name=token_id,json=tokenId" json:"token_id,omitempty"`
	StreamName           *string  `protobuf:"bytes,2,req,name=stream_name,json=streamName" json:"stream_name,omitempty"`
	EventName            *string  `protobuf:"bytes,3,req,name=event_name,json=eventName" json:"event_name,omitempty"`
	JsonText             *string  `protobuf:"bytes,4,req,name=json_text,json=jsonText" json:"json_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportEvent) Reset()         { *m = ReportEvent{} }
func (m *ReportEvent) String() string { return proto.CompactTextString(m) }
func (*ReportEvent) ProtoMessage()    {}
func (*ReportEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{3}
}
func (m *ReportEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportEvent.Unmarshal(m, b)
}
func (m *ReportEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportEvent.Marshal(b, m, deterministic)
}
func (dst *ReportEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportEvent.Merge(dst, src)
}
func (m *ReportEvent) XXX_Size() int {
	return xxx_messageInfo_ReportEvent.Size(m)
}
func (m *ReportEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ReportEvent proto.InternalMessageInfo

func (m *ReportEvent) GetTokenId() string {
	if m != nil && m.TokenId != nil {
		return *m.TokenId
	}
	return ""
}

func (m *ReportEvent) GetStreamName() string {
	if m != nil && m.StreamName != nil {
		return *m.StreamName
	}
	return ""
}

func (m *ReportEvent) GetEventName() string {
	if m != nil && m.EventName != nil {
		return *m.EventName
	}
	return ""
}

func (m *ReportEvent) GetJsonText() string {
	if m != nil && m.JsonText != nil {
		return *m.JsonText
	}
	return ""
}

type GetReportRequest struct {
	TokenId              *string  `protobuf:"bytes,1,req,name=token_id,json=tokenId" json:"token_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReportRequest) Reset()         { *m = GetReportRequest{} }
func (m *GetReportRequest) String() string { return proto.CompactTextString(m) }
func (*GetReportRequest) ProtoMessage()    {}
func (*GetReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{4}
}
func (m *GetReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportRequest.Unmarshal(m, b)
}
func (m *GetReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportRequest.Marshal(b, m, deterministic)
}
func (dst *GetReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportRequest.Merge(dst, src)
}
func (m *GetReportRequest) XXX_Size() int {
	return xxx_messageInfo_GetReportRequest.Size(m)
}
func (m *GetReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportRequest proto.InternalMessageInfo

func (m *GetReportRequest) GetTokenId() string {
	if m != nil && m.TokenId != nil {
		return *m.TokenId
	}
	return ""
}

type LoginRequest struct {
	UserName             *string  `protobuf:"bytes,1,req,name=user_name,json=userName" json:"user_name,omitempty"`
	Password             *string  `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{5}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type LoginReply struct {
	TokenId              *string  `protobuf:"bytes,1,req,name=token_id,json=tokenId" json:"token_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReply) Reset()         { *m = LoginReply{} }
func (m *LoginReply) String() string { return proto.CompactTextString(m) }
func (*LoginReply) ProtoMessage()    {}
func (*LoginReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{6}
}
func (m *LoginReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReply.Unmarshal(m, b)
}
func (m *LoginReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReply.Marshal(b, m, deterministic)
}
func (dst *LoginReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReply.Merge(dst, src)
}
func (m *LoginReply) XXX_Size() int {
	return xxx_messageInfo_LoginReply.Size(m)
}
func (m *LoginReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReply proto.InternalMessageInfo

func (m *LoginReply) GetTokenId() string {
	if m != nil && m.TokenId != nil {
		return *m.TokenId
	}
	return ""
}

type LogoutRequest struct {
	TokenId              *string  `protobuf:"bytes,1,req,name=token_id,json=tokenId" json:"token_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{7}
}
func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (dst *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(dst, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetTokenId() string {
	if m != nil && m.TokenId != nil {
		return *m.TokenId
	}
	return ""
}

type LogoutReply struct {
	Result               *string  `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutReply) Reset()         { *m = LogoutReply{} }
func (m *LogoutReply) String() string { return proto.CompactTextString(m) }
func (*LogoutReply) ProtoMessage()    {}
func (*LogoutReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{8}
}
func (m *LogoutReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutReply.Unmarshal(m, b)
}
func (m *LogoutReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutReply.Marshal(b, m, deterministic)
}
func (dst *LogoutReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutReply.Merge(dst, src)
}
func (m *LogoutReply) XXX_Size() int {
	return xxx_messageInfo_LogoutReply.Size(m)
}
func (m *LogoutReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutReply.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutReply proto.InternalMessageInfo

func (m *LogoutReply) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

type SubscribeRequest struct {
	StreamName           *string  `protobuf:"bytes,1,req,name=stream_name,json=streamName" json:"stream_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{9}
}
func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (dst *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(dst, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetStreamName() string {
	if m != nil && m.StreamName != nil {
		return *m.StreamName
	}
	return ""
}

type CliConfigArgs struct {
	ReqId                *int64   `protobuf:"varint,1,req,name=ReqId" json:"ReqId,omitempty"`
	Cli                  *string  `protobuf:"bytes,2,req,name=cli" json:"cli,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CliConfigArgs) Reset()         { *m = CliConfigArgs{} }
func (m *CliConfigArgs) String() string { return proto.CompactTextString(m) }
func (*CliConfigArgs) ProtoMessage()    {}
func (*CliConfigArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{10}
}
func (m *CliConfigArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CliConfigArgs.Unmarshal(m, b)
}
func (m *CliConfigArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CliConfigArgs.Marshal(b, m, deterministic)
}
func (dst *CliConfigArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CliConfigArgs.Merge(dst, src)
}
func (m *CliConfigArgs) XXX_Size() int {
	return xxx_messageInfo_CliConfigArgs.Size(m)
}
func (m *CliConfigArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_CliConfigArgs.DiscardUnknown(m)
}

var xxx_messageInfo_CliConfigArgs proto.InternalMessageInfo

func (m *CliConfigArgs) GetReqId() int64 {
	if m != nil && m.ReqId != nil {
		return *m.ReqId
	}
	return 0
}

func (m *CliConfigArgs) GetCli() string {
	if m != nil && m.Cli != nil {
		return *m.Cli
	}
	return ""
}

type CliConfigReply struct {
	ResReqId             *int64   `protobuf:"varint,1,req,name=ResReqId" json:"ResReqId,omitempty"`
	Output               *string  `protobuf:"bytes,2,req,name=output" json:"output,omitempty"`
	Errors               *string  `protobuf:"bytes,3,req,name=errors" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CliConfigReply) Reset()         { *m = CliConfigReply{} }
func (m *CliConfigReply) String() string { return proto.CompactTextString(m) }
func (*CliConfigReply) ProtoMessage()    {}
func (*CliConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{11}
}
func (m *CliConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CliConfigReply.Unmarshal(m, b)
}
func (m *CliConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CliConfigReply.Marshal(b, m, deterministic)
}
func (dst *CliConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CliConfigReply.Merge(dst, src)
}
func (m *CliConfigReply) XXX_Size() int {
	return xxx_messageInfo_CliConfigReply.Size(m)
}
func (m *CliConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CliConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_CliConfigReply proto.InternalMessageInfo

func (m *CliConfigReply) GetResReqId() int64 {
	if m != nil && m.ResReqId != nil {
		return *m.ResReqId
	}
	return 0
}

func (m *CliConfigReply) GetOutput() string {
	if m != nil && m.Output != nil {
		return *m.Output
	}
	return ""
}

func (m *CliConfigReply) GetErrors() string {
	if m != nil && m.Errors != nil {
		return *m.Errors
	}
	return ""
}

type DisplayCmdArgs struct {
	ReqId                *int64   `protobuf:"varint,1,req,name=ReqId" json:"ReqId,omitempty"`
	Cli                  *string  `protobuf:"bytes,2,req,name=cli" json:"cli,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisplayCmdArgs) Reset()         { *m = DisplayCmdArgs{} }
func (m *DisplayCmdArgs) String() string { return proto.CompactTextString(m) }
func (*DisplayCmdArgs) ProtoMessage()    {}
func (*DisplayCmdArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{12}
}
func (m *DisplayCmdArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisplayCmdArgs.Unmarshal(m, b)
}
func (m *DisplayCmdArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisplayCmdArgs.Marshal(b, m, deterministic)
}
func (dst *DisplayCmdArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplayCmdArgs.Merge(dst, src)
}
func (m *DisplayCmdArgs) XXX_Size() int {
	return xxx_messageInfo_DisplayCmdArgs.Size(m)
}
func (m *DisplayCmdArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplayCmdArgs.DiscardUnknown(m)
}

var xxx_messageInfo_DisplayCmdArgs proto.InternalMessageInfo

func (m *DisplayCmdArgs) GetReqId() int64 {
	if m != nil && m.ReqId != nil {
		return *m.ReqId
	}
	return 0
}

func (m *DisplayCmdArgs) GetCli() string {
	if m != nil && m.Cli != nil {
		return *m.Cli
	}
	return ""
}

type DisplayCmdReply struct {
	ResReqId             *int64   `protobuf:"varint,1,req,name=ResReqId" json:"ResReqId,omitempty"`
	Output               *string  `protobuf:"bytes,2,req,name=output" json:"output,omitempty"`
	Errors               *string  `protobuf:"bytes,3,req,name=errors" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisplayCmdReply) Reset()         { *m = DisplayCmdReply{} }
func (m *DisplayCmdReply) String() string { return proto.CompactTextString(m) }
func (*DisplayCmdReply) ProtoMessage()    {}
func (*DisplayCmdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_service_3b16c1561282434f, []int{13}
}
func (m *DisplayCmdReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisplayCmdReply.Unmarshal(m, b)
}
func (m *DisplayCmdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisplayCmdReply.Marshal(b, m, deterministic)
}
func (dst *DisplayCmdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplayCmdReply.Merge(dst, src)
}
func (m *DisplayCmdReply) XXX_Size() int {
	return xxx_messageInfo_DisplayCmdReply.Size(m)
}
func (m *DisplayCmdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplayCmdReply.DiscardUnknown(m)
}

var xxx_messageInfo_DisplayCmdReply proto.InternalMessageInfo

func (m *DisplayCmdReply) GetResReqId() int64 {
	if m != nil && m.ResReqId != nil {
		return *m.ResReqId
	}
	return 0
}

func (m *DisplayCmdReply) GetOutput() string {
	if m != nil && m.Output != nil {
		return *m.Output
	}
	return ""
}

func (m *DisplayCmdReply) GetErrors() string {
	if m != nil && m.Errors != nil {
		return *m.Errors
	}
	return ""
}

func init() {
	proto.RegisterType((*GetJsonReply)(nil), "grpc_service.GetJsonReply")
	proto.RegisterType((*SubscribeReply)(nil), "grpc_service.SubscribeReply")
	proto.RegisterType((*ConfigReply)(nil), "grpc_service.ConfigReply")
	proto.RegisterType((*ReportEvent)(nil), "grpc_service.ReportEvent")
	proto.RegisterType((*GetReportRequest)(nil), "grpc_service.GetReportRequest")
	proto.RegisterType((*LoginRequest)(nil), "grpc_service.LoginRequest")
	proto.RegisterType((*LoginReply)(nil), "grpc_service.LoginReply")
	proto.RegisterType((*LogoutRequest)(nil), "grpc_service.LogoutRequest")
	proto.RegisterType((*LogoutReply)(nil), "grpc_service.LogoutReply")
	proto.RegisterType((*SubscribeRequest)(nil), "grpc_service.SubscribeRequest")
	proto.RegisterType((*CliConfigArgs)(nil), "grpc_service.CliConfigArgs")
	proto.RegisterType((*CliConfigReply)(nil), "grpc_service.CliConfigReply")
	proto.RegisterType((*DisplayCmdArgs)(nil), "grpc_service.DisplayCmdArgs")
	proto.RegisterType((*DisplayCmdReply)(nil), "grpc_service.DisplayCmdReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcServiceClient is the client API for GrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutReply, error)
	SubscribeByStreamName(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeReply, error)
	GetEventReport(ctx context.Context, in *GetReportRequest, opts ...grpc.CallOption) (GrpcService_GetEventReportClient, error)
	CliConfig(ctx context.Context, in *CliConfigArgs, opts ...grpc.CallOption) (GrpcService_CliConfigClient, error)
	DisplayCmdTextOutput(ctx context.Context, in *DisplayCmdArgs, opts ...grpc.CallOption) (GrpcService_DisplayCmdTextOutputClient, error)
}

type grpcServiceClient struct {
	cc *grpc.ClientConn
}

func NewGrpcServiceClient(cc *grpc.ClientConn) GrpcServiceClient {
	return &grpcServiceClient{cc}
}

func (c *grpcServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/grpc_service.GrpcService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcServiceClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutReply, error) {
	out := new(LogoutReply)
	err := c.cc.Invoke(ctx, "/grpc_service.GrpcService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcServiceClient) SubscribeByStreamName(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeReply, error) {
	out := new(SubscribeReply)
	err := c.cc.Invoke(ctx, "/grpc_service.GrpcService/SubscribeByStreamName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcServiceClient) GetEventReport(ctx context.Context, in *GetReportRequest, opts ...grpc.CallOption) (GrpcService_GetEventReportClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrpcService_serviceDesc.Streams[0], "/grpc_service.GrpcService/GetEventReport", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcServiceGetEventReportClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GrpcService_GetEventReportClient interface {
	Recv() (*ReportEvent, error)
	grpc.ClientStream
}

type grpcServiceGetEventReportClient struct {
	grpc.ClientStream
}

func (x *grpcServiceGetEventReportClient) Recv() (*ReportEvent, error) {
	m := new(ReportEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *grpcServiceClient) CliConfig(ctx context.Context, in *CliConfigArgs, opts ...grpc.CallOption) (GrpcService_CliConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrpcService_serviceDesc.Streams[1], "/grpc_service.GrpcService/CliConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcServiceCliConfigClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GrpcService_CliConfigClient interface {
	Recv() (*CliConfigReply, error)
	grpc.ClientStream
}

type grpcServiceCliConfigClient struct {
	grpc.ClientStream
}

func (x *grpcServiceCliConfigClient) Recv() (*CliConfigReply, error) {
	m := new(CliConfigReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *grpcServiceClient) DisplayCmdTextOutput(ctx context.Context, in *DisplayCmdArgs, opts ...grpc.CallOption) (GrpcService_DisplayCmdTextOutputClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrpcService_serviceDesc.Streams[2], "/grpc_service.GrpcService/DisplayCmdTextOutput", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcServiceDisplayCmdTextOutputClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GrpcService_DisplayCmdTextOutputClient interface {
	Recv() (*DisplayCmdReply, error)
	grpc.ClientStream
}

type grpcServiceDisplayCmdTextOutputClient struct {
	grpc.ClientStream
}

func (x *grpcServiceDisplayCmdTextOutputClient) Recv() (*DisplayCmdReply, error) {
	m := new(DisplayCmdReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GrpcServiceServer is the server API for GrpcService service.
type GrpcServiceServer interface {
	Login(context.Context, *LoginRequest) (*LoginReply, error)
	Logout(context.Context, *LogoutRequest) (*LogoutReply, error)
	SubscribeByStreamName(context.Context, *SubscribeRequest) (*SubscribeReply, error)
	GetEventReport(*GetReportRequest, GrpcService_GetEventReportServer) error
	CliConfig(*CliConfigArgs, GrpcService_CliConfigServer) error
	DisplayCmdTextOutput(*DisplayCmdArgs, GrpcService_DisplayCmdTextOutputServer) error
}

func RegisterGrpcServiceServer(s *grpc.Server, srv GrpcServiceServer) {
	s.RegisterService(&_GrpcService_serviceDesc, srv)
}

func _GrpcService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_service.GrpcService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_service.GrpcService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcServiceServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcService_SubscribeByStreamName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcServiceServer).SubscribeByStreamName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_service.GrpcService/SubscribeByStreamName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcServiceServer).SubscribeByStreamName(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcService_GetEventReport_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetReportRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GrpcServiceServer).GetEventReport(m, &grpcServiceGetEventReportServer{stream})
}

type GrpcService_GetEventReportServer interface {
	Send(*ReportEvent) error
	grpc.ServerStream
}

type grpcServiceGetEventReportServer struct {
	grpc.ServerStream
}

func (x *grpcServiceGetEventReportServer) Send(m *ReportEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _GrpcService_CliConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CliConfigArgs)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GrpcServiceServer).CliConfig(m, &grpcServiceCliConfigServer{stream})
}

type GrpcService_CliConfigServer interface {
	Send(*CliConfigReply) error
	grpc.ServerStream
}

type grpcServiceCliConfigServer struct {
	grpc.ServerStream
}

func (x *grpcServiceCliConfigServer) Send(m *CliConfigReply) error {
	return x.ServerStream.SendMsg(m)
}

func _GrpcService_DisplayCmdTextOutput_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DisplayCmdArgs)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GrpcServiceServer).DisplayCmdTextOutput(m, &grpcServiceDisplayCmdTextOutputServer{stream})
}

type GrpcService_DisplayCmdTextOutputServer interface {
	Send(*DisplayCmdReply) error
	grpc.ServerStream
}

type grpcServiceDisplayCmdTextOutputServer struct {
	grpc.ServerStream
}

func (x *grpcServiceDisplayCmdTextOutputServer) Send(m *DisplayCmdReply) error {
	return x.ServerStream.SendMsg(m)
}

var _GrpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_service.GrpcService",
	HandlerType: (*GrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _GrpcService_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _GrpcService_Logout_Handler,
		},
		{
			MethodName: "SubscribeByStreamName",
			Handler:    _GrpcService_SubscribeByStreamName_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetEventReport",
			Handler:       _GrpcService_GetEventReport_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CliConfig",
			Handler:       _GrpcService_CliConfig_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DisplayCmdTextOutput",
			Handler:       _GrpcService_DisplayCmdTextOutput_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc_service.proto",
}

func init() { proto.RegisterFile("grpc_service.proto", fileDescriptor_grpc_service_3b16c1561282434f) }

var fileDescriptor_grpc_service_3b16c1561282434f = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x6d, 0x1a, 0x5a, 0xec, 0x71, 0x1a, 0xa2, 0x55, 0x41, 0xa9, 0x43, 0x01, 0xad, 0x54, 0xa8,
	0x90, 0xa8, 0x10, 0x1c, 0xe0, 0x86, 0x68, 0x40, 0x56, 0xab, 0x8a, 0x4a, 0x0e, 0x52, 0x2f, 0xa0,
	0xc8, 0x75, 0x06, 0xcb, 0xe0, 0x78, 0xdd, 0xdd, 0x75, 0x69, 0x3e, 0x80, 0x0f, 0xe5, 0x4f, 0x90,
	0xbd, 0x5b, 0xc7, 0x5e, 0x1a, 0x0b, 0xa4, 0xde, 0x32, 0xf3, 0x66, 0xde, 0x3e, 0xcf, 0x9b, 0x09,
	0x90, 0x88, 0x67, 0xe1, 0x54, 0x20, 0xbf, 0x8c, 0x43, 0x3c, 0xc8, 0x38, 0x93, 0x8c, 0xf4, 0xea,
	0x39, 0xfa, 0x14, 0x7a, 0x1e, 0xca, 0x63, 0xc1, 0x52, 0x1f, 0xb3, 0x64, 0x41, 0x1e, 0xc0, 0x26,
	0x47, 0x91, 0x27, 0x72, 0xd8, 0x79, 0xb2, 0xbe, 0x6f, 0xfb, 0x3a, 0xa2, 0xfb, 0xd0, 0x9f, 0xe4,
	0xe7, 0x22, 0xe4, 0xf1, 0x39, 0xb6, 0x57, 0xee, 0x81, 0x33, 0x66, 0xe9, 0xb7, 0x38, 0x6a, 0x2f,
	0xfb, 0xd5, 0x01, 0xc7, 0xc7, 0x8c, 0x71, 0xf9, 0xf1, 0x12, 0x53, 0x49, 0x76, 0xc0, 0x92, 0xec,
	0x07, 0xa6, 0xd3, 0x78, 0xa6, 0x2b, 0xef, 0x96, 0xf1, 0xd1, 0x8c, 0x3c, 0x06, 0x47, 0x48, 0x8e,
	0xc1, 0x7c, 0x9a, 0x06, 0x73, 0x1c, 0xae, 0x97, 0x28, 0xa8, 0xd4, 0xa7, 0x60, 0x8e, 0x64, 0x17,
	0x00, 0x0b, 0x12, 0x85, 0x77, 0x4b, 0xdc, 0x2e, 0x33, 0x25, 0x3c, 0x02, 0xfb, 0xbb, 0x60, 0xe9,
	0x54, 0xe2, 0x95, 0x1c, 0xde, 0x29, 0x51, 0xab, 0x48, 0x7c, 0xc6, 0x2b, 0x49, 0x5f, 0xc0, 0xc0,
	0x43, 0xa9, 0x94, 0xf8, 0x78, 0x91, 0xa3, 0x68, 0xd3, 0x42, 0x3d, 0xe8, 0x9d, 0xb0, 0x28, 0x4e,
	0xaf, 0x4b, 0x47, 0x60, 0xe7, 0x02, 0xb9, 0x7a, 0x59, 0xd5, 0x5a, 0x45, 0xa2, 0x7c, 0xd8, 0x05,
	0x2b, 0x0b, 0x84, 0xf8, 0xc9, 0xf8, 0x4c, 0xab, 0xae, 0x62, 0xfa, 0x0c, 0x40, 0x13, 0x15, 0x53,
	0x6a, 0x79, 0xf1, 0x39, 0x6c, 0x9d, 0xb0, 0x88, 0xe5, 0xff, 0xa2, 0x6e, 0x0f, 0x9c, 0xeb, 0xda,
	0xb6, 0xd9, 0xbf, 0x86, 0x41, 0xcd, 0x4c, 0xc5, 0x6a, 0x0c, 0xb9, 0x63, 0x0e, 0x99, 0xbe, 0x81,
	0xad, 0x71, 0x12, 0x2b, 0x6b, 0xdf, 0xf3, 0x48, 0x90, 0x6d, 0xd8, 0xf0, 0xf1, 0xe2, 0x48, 0x89,
	0xe8, 0xfa, 0x2a, 0x20, 0x03, 0xe8, 0x86, 0x49, 0xac, 0x3f, 0xb7, 0xf8, 0x49, 0xbf, 0x40, 0xbf,
	0x6a, 0x54, 0xba, 0x5c, 0xb0, 0x7c, 0x14, 0xf5, 0xe6, 0x2a, 0x2e, 0x34, 0xb3, 0x5c, 0x66, 0xb9,
	0xd4, 0x14, 0x3a, 0x2a, 0xf2, 0xc8, 0x39, 0xe3, 0x42, 0xfb, 0xab, 0x23, 0xfa, 0x16, 0xfa, 0x1f,
	0x62, 0x91, 0x25, 0xc1, 0x62, 0x3c, 0x9f, 0xfd, 0x97, 0xae, 0xaf, 0x70, 0x6f, 0xd9, 0x79, 0xeb,
	0xc2, 0x5e, 0xfd, 0xee, 0x82, 0xe3, 0xf1, 0x2c, 0x9c, 0xa8, 0x4b, 0x23, 0xef, 0x60, 0xa3, 0x34,
	0x9c, 0xb8, 0x07, 0x8d, 0xab, 0xac, 0xaf, 0x93, 0x3b, 0xbc, 0x11, 0xcb, 0x92, 0x05, 0x5d, 0x23,
	0x87, 0xb0, 0xa9, 0xcc, 0x25, 0xa3, 0xbf, 0xaa, 0x96, 0xeb, 0xe1, 0xee, 0xdc, 0x0c, 0x2a, 0x8e,
	0x33, 0xb8, 0x5f, 0x39, 0x7f, 0xb8, 0x98, 0x2c, 0x4f, 0xe8, 0x51, 0xb3, 0xcb, 0x5c, 0x0f, 0xf7,
	0xe1, 0x4a, 0x5c, 0x11, 0x9f, 0x42, 0xdf, 0x43, 0x75, 0xca, 0xea, 0x96, 0x4c, 0x46, 0xf3, 0xc8,
	0x4c, 0x9d, 0xb5, 0xff, 0x02, 0xba, 0xf6, 0xb2, 0x43, 0x8e, 0xc1, 0xae, 0xb6, 0xc6, 0xfc, 0xe0,
	0xc6, 0x1e, 0x9a, 0xd2, 0x9a, 0xbb, 0x56, 0x72, 0x9d, 0xc1, 0xf6, 0xd2, 0xe9, 0xe2, 0xea, 0x4f,
	0x95, 0x75, 0x46, 0x67, 0x73, 0x8f, 0xdc, 0xdd, 0x55, 0x68, 0x45, 0xfc, 0x27, 0x00, 0x00, 0xff,
	0xff, 0x12, 0x37, 0x2c, 0x3b, 0x60, 0x05, 0x00, 0x00,
}
